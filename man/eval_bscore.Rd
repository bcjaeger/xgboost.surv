% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluate.R
\name{eval_bscore}
\alias{eval_bscore}
\title{Integrated Brier Score}
\usage{
eval_bscore(surv_probs, label = NULL, time = NULL, status = NULL,
  cens_data = NULL, cens_model = "cox", eval_times = NULL,
  scale = TRUE)
}
\arguments{
\item{surv_probs}{a matrix of survival probabilities}

\item{label}{a numeric vector of class \code{sgb_label}}

\item{time}{(needed iff \code{label} is unspecified) a numeric vector of time values.
All \code{time} values must be greater than 0.}

\item{status}{(needed iff \code{label} is unspecified) a numeric vector of
status values. All \code{status} values should be 0 or 1, with 1 indicating
that the event of interest occurred and 0 indicating censoring.}

\item{cens_data}{(optional) a \code{data.frame} or \code{tibble} containing a
selection of variables that will be used to model censoring probability.
The inverse probability of censoring will then be used to weight each
observation's contribution go the integrated Brier score.}

\item{cens_model}{Method for estimating inverse probability of
censoring weights:
\itemize{
\item \code{cox}: A semi-parametric Cox proportional hazard model is fitted
to the censoring times
\item \code{nonpar}: Nonparametric extension of the Kaplan-Meier for the censoring
times using symmetric nearest neighborhoods â€“ available for arbitrary
many strata variables on the right hand side of argument formula
but at most one continuous variable (see \link[prodlim:prodlim]{prodlim}
and \link[prodlim:neighborhood]{neighborhood})
\item \code{aalen}: The nonparametric Aalen additive model fitted to the
censoring times. Requires the timereg package.
}

\strong{Note}: if \code{cens_data} is unspecified, the Kaplan-Meier estimator
will be used to estimate inverse probability of censoring weights}

\item{eval_times}{A numeric vector giving times at which to compute
Brier scores, which will then be used collectively to compute the
integrated Brier score.}

\item{scale}{(\code{TRUE}/\code{FALSE}) if \code{TRUE}, a marginal Kaplan-Meier
prediction model will be fitted to the given (\code{time}, \code{status})
values and used as a reference Brier score. Then, a scaled Brier
score will be computed as 1 - (model-IBS / reference-IBS)}
}
\value{
a numeric value. If \code{scale = TRUE}, return values of
0 indicate a non-informative model and values of 1 indicate
a perfect model. If \code{scale = FALSE}, return values of 0 indicate
a perfect model, and return values greater than 0 are difficult
to interpret.
}
\description{
Integrated Brier Score
}
\examples{

# prodlim needs to be loaded for pec functions to work.
library(prodlim)
library(survival)

set.seed(329)
# predict 1/2 for everyone, all the time
surv_probs <- matrix(
  data = rep(1/2, 1000),
  nrow = 100,
  ncol = 10
)

# make random time & status values
time = runif(100, min = 1, max = 10)
status = c(rep(1, 50), rep(0, 50))

# use all the possible times
eval_times = seq(1, 10, length.out = 10)

# censor data has one variable that is
# related to time values
cens_data = data.frame(x1 = time + rnorm(100, sd = 1/2))

# note that the Brier score is 1/4, as expected, when
# no adjustment is applied for censoring.
eval_bscore(
  surv_probs = surv_probs,
  label = sgb_label(time, status),
  eval_times = eval_times,
  cens_data = cens_data,
  cens_model = 'marginal',
  scale = FALSE
)

# Now adjust for censoring:
eval_bscore(
  surv_probs = surv_probs,
  label = sgb_label(time, status),
  eval_times = eval_times,
  cens_data = cens_data,
  cens_model = 'cox',
  scale = FALSE
)
}
