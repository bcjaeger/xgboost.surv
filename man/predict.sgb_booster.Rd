% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.R
\name{predict.sgb_booster}
\alias{predict.sgb_booster}
\title{Boosting Predictions}
\usage{
\method{predict}{sgb_booster}(object, new_data, eval_times = NULL, ...)
}
\arguments{
\item{object}{a \code{sgb_booster} object}

\item{new_data}{data to compute predictions for.}

\item{eval_times}{numeric vector of times to compute survival probabilities.}

\item{...}{Additional arguments passed to other functions.
\itemize{
\item \strong{smooth:} if \code{TRUE}, smooth the estimated baseline hazard
using Friedman's super smoother \link[stats:supsmu]{supsmu}.
\item \strong{ntreelimit:} limit the number of model's trees or boosting
iterations used in prediction. If unspecified, all trees will be used.
}}
}
\value{
a \code{matrix} with number of columns equal to the number of
\code{eval_times} and number of rows equal to the number of rows in
\code{new_data}. Additionally, \code{eval_times} are attached to the output
as an attribute.
}
\description{
Boosting Predictions
}
\examples{

x1 <- rnorm(100)
x2 <- rnorm(100)
s  <- as.numeric(x1 + x2 + rnorm(100) > 0)
t  <- runif(100, min=1, max=10)

df = data.frame(time=t, status=s, x1=x1, x2=x2)

df = as_sgb_data(df, time=time, status=status)

sgb_booster <- sgb_fit(
  sgb_df = df,
  params = sgb_params(max_depth=1),
  nrounds = 10,
  verbose = FALSE
)

sgb_probs <- predict(sgb_booster, new_data = df)


}
